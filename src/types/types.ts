/**
 * Интерфейс для объекта со свойствами, которые определяют содержание и внешний вид предупреждения.
 * Перечень передаваемых данных:
 *
 * eventType - Код типа предупреждения (важность). Будет предопределено
 * несколько типов предупреждений. Определяет цветовую схему и параметры
 * используемых шрифтов. Цветовые схемы будут подключаться в корневой
 * компоненте из отдельного файла.
 *
 * eventTime - Время действия предупреждения. Может быть точным (одно
 * значение) или интервальным (два значения). Значение времени передается в
 * формате timestamp.
 *
 * timeFormat -  Формат отображения времени. Возможные варианты:
 * часы:минуты; часы:минуты день:месяц; другие.
 *
 * titleText -  Текст заголовка.
 *
 * eventText - Текст предупреждения.
 *
 * iconCode - Опциональный параметр. Код иконки предупреждения. Компонента
 * такой иконки будет создана позднее. Компонента будет представлять собой
 * графическое изображение в формате svg (на которое также будет
 * распространяться цветовая схема заданная типом предупреждения). Поэтому
 * предполагается передача в нее через Property кода, для отображения.
 *
 * isDayShow - Опциональный параметр. Отвечает за отображение блока с датой. Если true, то блок отрисовывается.
 *
 */
export interface Data {
  eventType: number;
  eventTime: number | number[];
  timeFormat: string;
  titleText: string;
  eventText: string;
  iconCode?: number;
  isDayShow?: boolean;
}
/**
 * Интерфейс для объекта, который управляет отображением блока с фильтрами
 * и их состояниями.
 *
 * code - Код фильтра совпадает с кодом предупреждения eventType.
 *
 * amount - Общее количество предупреждений с одинаковым кодом.
 *
 * name - Наименование фильтра.
 *
 * isActive - Отвечает за применение фильтра. Если true, то данный фильтр применяется.
 */
export interface Filters {
  code: number;
  amount: number;
  name: string;
  isActive: boolean;
}
